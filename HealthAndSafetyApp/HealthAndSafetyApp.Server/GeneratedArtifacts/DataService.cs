//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updating(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updated(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::LightSwitchApplication.Employee entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HealthAndSafetyIncidents_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HealthAndSafetyIncidents_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HealthAndSafetyIncidents_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HealthAndSafetyIncidents_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HealthAndSafetyIncidents_Inserting(global::LightSwitchApplication.HealthAndSafetyIncident entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HealthAndSafetyIncidents_Inserted(global::LightSwitchApplication.HealthAndSafetyIncident entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HealthAndSafetyIncidents_Updating(global::LightSwitchApplication.HealthAndSafetyIncident entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HealthAndSafetyIncidents_Updated(global::LightSwitchApplication.HealthAndSafetyIncident entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HealthAndSafetyIncidents_Deleting(global::LightSwitchApplication.HealthAndSafetyIncident entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HealthAndSafetyIncidents_Deleted(global::LightSwitchApplication.HealthAndSafetyIncident entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HealthAndSafetyIncidents_Validate(global::LightSwitchApplication.HealthAndSafetyIncident entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HealthAndSafetyIncidents_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.HealthAndSafetyIncident, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentOutcomes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentOutcomes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentOutcomes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentOutcomes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentOutcomes_Inserting(global::LightSwitchApplication.IncidentOutcome entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentOutcomes_Inserted(global::LightSwitchApplication.IncidentOutcome entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentOutcomes_Updating(global::LightSwitchApplication.IncidentOutcome entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentOutcomes_Updated(global::LightSwitchApplication.IncidentOutcome entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentOutcomes_Deleting(global::LightSwitchApplication.IncidentOutcome entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentOutcomes_Deleted(global::LightSwitchApplication.IncidentOutcome entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentOutcomes_Validate(global::LightSwitchApplication.IncidentOutcome entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentOutcomes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IncidentOutcome, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersons_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersons_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersons_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersons_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersons_Inserting(global::LightSwitchApplication.IncidentPerson entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersons_Inserted(global::LightSwitchApplication.IncidentPerson entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersons_Updating(global::LightSwitchApplication.IncidentPerson entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersons_Updated(global::LightSwitchApplication.IncidentPerson entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersons_Deleting(global::LightSwitchApplication.IncidentPerson entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersons_Deleted(global::LightSwitchApplication.IncidentPerson entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersons_Validate(global::LightSwitchApplication.IncidentPerson entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersons_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IncidentPerson, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentStatuses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentStatuses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentStatuses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentStatuses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentStatuses_Inserting(global::LightSwitchApplication.IncidentStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentStatuses_Inserted(global::LightSwitchApplication.IncidentStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentStatuses_Updating(global::LightSwitchApplication.IncidentStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentStatuses_Updated(global::LightSwitchApplication.IncidentStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentStatuses_Deleting(global::LightSwitchApplication.IncidentStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentStatuses_Deleted(global::LightSwitchApplication.IncidentStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentStatuses_Validate(global::LightSwitchApplication.IncidentStatus entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentStatuses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IncidentStatus, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentWitnesses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentWitnesses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentWitnesses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentWitnesses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentWitnesses_Inserting(global::LightSwitchApplication.IncidentWitness entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentWitnesses_Inserted(global::LightSwitchApplication.IncidentWitness entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentWitnesses_Updating(global::LightSwitchApplication.IncidentWitness entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentWitnesses_Updated(global::LightSwitchApplication.IncidentWitness entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentWitnesses_Deleting(global::LightSwitchApplication.IncidentWitness entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentWitnesses_Deleted(global::LightSwitchApplication.IncidentWitness entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentWitnesses_Validate(global::LightSwitchApplication.IncidentWitness entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentWitnesses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IncidentWitness, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InjuryTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InjuryTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InjuryTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InjuryTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InjuryTypes_Inserting(global::LightSwitchApplication.InjuryType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InjuryTypes_Inserted(global::LightSwitchApplication.InjuryType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InjuryTypes_Updating(global::LightSwitchApplication.InjuryType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InjuryTypes_Updated(global::LightSwitchApplication.InjuryType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InjuryTypes_Deleting(global::LightSwitchApplication.InjuryType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InjuryTypes_Deleted(global::LightSwitchApplication.InjuryType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InjuryTypes_Validate(global::LightSwitchApplication.InjuryType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InjuryTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.InjuryType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonTypes_Inserting(global::LightSwitchApplication.PersonType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonTypes_Inserted(global::LightSwitchApplication.PersonType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonTypes_Updating(global::LightSwitchApplication.PersonType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonTypes_Updated(global::LightSwitchApplication.PersonType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonTypes_Deleting(global::LightSwitchApplication.PersonType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonTypes_Deleted(global::LightSwitchApplication.PersonType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonTypes_Validate(global::LightSwitchApplication.PersonType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PersonTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PersonType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsReportedToMe_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IncidentsReportedToMe_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsReportedToMe_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.HealthAndSafetyIncident> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IncidentsReportedToMe_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.HealthAndSafetyIncident> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IncidentsReportedToMe_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsThisMonth_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IncidentsThisMonth_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsThisMonth_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.HealthAndSafetyIncident> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IncidentsThisMonth_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.HealthAndSafetyIncident> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IncidentsThisMonth_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpenIncidents_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OpenIncidents_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpenIncidents_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.HealthAndSafetyIncident> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OpenIncidents_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.HealthAndSafetyIncident> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OpenIncidents_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReverseOrderedIncidents_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ReverseOrderedIncidents_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReverseOrderedIncidents_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.HealthAndSafetyIncident> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ReverseOrderedIncidents_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.HealthAndSafetyIncident> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ReverseOrderedIncidents_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersonsThisMonth_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IncidentPersonsThisMonth_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentPersonsThisMonth_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.IncidentPerson> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IncidentPersonsThisMonth_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.IncidentPerson> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IncidentPersonsThisMonth_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __EmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "Employees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Filter);
            private static bool __Employees_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanInsert(ref result);
                return result;
            }
            private static bool __Employees_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanUpdate(ref result);
                return result;
            }
            private static bool __Employees_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanDelete(ref result);
                return result;
            }
            private static bool __Employees_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanRead(ref result);
                return result;
            }
            private static void __Employees_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserting(e);
            }
            private static void __Employees_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserted(e);
            }
            private static void __Employees_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updating(e);
            }
            private static void __Employees_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updated(e);
            }
            private static void __Employees_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleting(e);
            }
            private static void __Employees_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleted(e);
            }
            private static void __Employees_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Employees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> __Employees_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter = null;
                d.Employees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.HealthAndSafetyIncident>
                __HealthAndSafetyIncidentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.HealthAndSafetyIncident>(
                    "HealthAndSafetyIncidents",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__HealthAndSafetyIncidents_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__HealthAndSafetyIncidents_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__HealthAndSafetyIncidents_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__HealthAndSafetyIncidents_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__HealthAndSafetyIncidents_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__HealthAndSafetyIncidents_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__HealthAndSafetyIncidents_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__HealthAndSafetyIncidents_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__HealthAndSafetyIncidents_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__HealthAndSafetyIncidents_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__HealthAndSafetyIncidents_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__HealthAndSafetyIncidents_Filter);
            private static bool __HealthAndSafetyIncidents_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.HealthAndSafetyIncidents_CanInsert(ref result);
                return result;
            }
            private static bool __HealthAndSafetyIncidents_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.HealthAndSafetyIncidents_CanUpdate(ref result);
                return result;
            }
            private static bool __HealthAndSafetyIncidents_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.HealthAndSafetyIncidents_CanDelete(ref result);
                return result;
            }
            private static bool __HealthAndSafetyIncidents_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.HealthAndSafetyIncidents_CanRead(ref result);
                return result;
            }
            private static void __HealthAndSafetyIncidents_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.HealthAndSafetyIncident e)
            {
                d.HealthAndSafetyIncidents_Inserting(e);
            }
            private static void __HealthAndSafetyIncidents_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.HealthAndSafetyIncident e)
            {
                d.HealthAndSafetyIncidents_Inserted(e);
            }
            private static void __HealthAndSafetyIncidents_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.HealthAndSafetyIncident e)
            {
                d.HealthAndSafetyIncidents_Updating(e);
            }
            private static void __HealthAndSafetyIncidents_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.HealthAndSafetyIncident e)
            {
                d.HealthAndSafetyIncidents_Updated(e);
            }
            private static void __HealthAndSafetyIncidents_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.HealthAndSafetyIncident e)
            {
                d.HealthAndSafetyIncidents_Deleting(e);
            }
            private static void __HealthAndSafetyIncidents_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.HealthAndSafetyIncident e)
            {
                d.HealthAndSafetyIncidents_Deleted(e);
            }
            private static void __HealthAndSafetyIncidents_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.HealthAndSafetyIncident e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.HealthAndSafetyIncidents_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.HealthAndSafetyIncident, bool>> __HealthAndSafetyIncidents_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.HealthAndSafetyIncident, bool>> filter = null;
                d.HealthAndSafetyIncidents_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IncidentOutcome>
                __IncidentOutcomesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IncidentOutcome>(
                    "IncidentOutcomes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentOutcomes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentOutcomes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentOutcomes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentOutcomes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentOutcomes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentOutcomes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentOutcomes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentOutcomes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentOutcomes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentOutcomes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentOutcomes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentOutcomes_Filter);
            private static bool __IncidentOutcomes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentOutcomes_CanInsert(ref result);
                return result;
            }
            private static bool __IncidentOutcomes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentOutcomes_CanUpdate(ref result);
                return result;
            }
            private static bool __IncidentOutcomes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentOutcomes_CanDelete(ref result);
                return result;
            }
            private static bool __IncidentOutcomes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentOutcomes_CanRead(ref result);
                return result;
            }
            private static void __IncidentOutcomes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentOutcome e)
            {
                d.IncidentOutcomes_Inserting(e);
            }
            private static void __IncidentOutcomes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentOutcome e)
            {
                d.IncidentOutcomes_Inserted(e);
            }
            private static void __IncidentOutcomes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentOutcome e)
            {
                d.IncidentOutcomes_Updating(e);
            }
            private static void __IncidentOutcomes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentOutcome e)
            {
                d.IncidentOutcomes_Updated(e);
            }
            private static void __IncidentOutcomes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentOutcome e)
            {
                d.IncidentOutcomes_Deleting(e);
            }
            private static void __IncidentOutcomes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentOutcome e)
            {
                d.IncidentOutcomes_Deleted(e);
            }
            private static void __IncidentOutcomes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentOutcome e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.IncidentOutcomes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IncidentOutcome, bool>> __IncidentOutcomes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IncidentOutcome, bool>> filter = null;
                d.IncidentOutcomes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IncidentPerson>
                __IncidentPersonsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IncidentPerson>(
                    "IncidentPersons",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersons_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersons_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersons_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersons_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersons_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersons_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersons_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersons_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersons_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersons_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersons_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersons_Filter);
            private static bool __IncidentPersons_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentPersons_CanInsert(ref result);
                return result;
            }
            private static bool __IncidentPersons_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentPersons_CanUpdate(ref result);
                return result;
            }
            private static bool __IncidentPersons_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentPersons_CanDelete(ref result);
                return result;
            }
            private static bool __IncidentPersons_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentPersons_CanRead(ref result);
                return result;
            }
            private static void __IncidentPersons_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentPerson e)
            {
                d.IncidentPersons_Inserting(e);
            }
            private static void __IncidentPersons_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentPerson e)
            {
                d.IncidentPersons_Inserted(e);
            }
            private static void __IncidentPersons_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentPerson e)
            {
                d.IncidentPersons_Updating(e);
            }
            private static void __IncidentPersons_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentPerson e)
            {
                d.IncidentPersons_Updated(e);
            }
            private static void __IncidentPersons_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentPerson e)
            {
                d.IncidentPersons_Deleting(e);
            }
            private static void __IncidentPersons_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentPerson e)
            {
                d.IncidentPersons_Deleted(e);
            }
            private static void __IncidentPersons_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentPerson e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.IncidentPersons_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IncidentPerson, bool>> __IncidentPersons_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IncidentPerson, bool>> filter = null;
                d.IncidentPersons_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IncidentStatus>
                __IncidentStatusesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IncidentStatus>(
                    "IncidentStatuses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentStatuses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentStatuses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentStatuses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentStatuses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentStatuses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentStatuses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentStatuses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentStatuses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentStatuses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentStatuses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentStatuses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentStatuses_Filter);
            private static bool __IncidentStatuses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentStatuses_CanInsert(ref result);
                return result;
            }
            private static bool __IncidentStatuses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentStatuses_CanUpdate(ref result);
                return result;
            }
            private static bool __IncidentStatuses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentStatuses_CanDelete(ref result);
                return result;
            }
            private static bool __IncidentStatuses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentStatuses_CanRead(ref result);
                return result;
            }
            private static void __IncidentStatuses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentStatus e)
            {
                d.IncidentStatuses_Inserting(e);
            }
            private static void __IncidentStatuses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentStatus e)
            {
                d.IncidentStatuses_Inserted(e);
            }
            private static void __IncidentStatuses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentStatus e)
            {
                d.IncidentStatuses_Updating(e);
            }
            private static void __IncidentStatuses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentStatus e)
            {
                d.IncidentStatuses_Updated(e);
            }
            private static void __IncidentStatuses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentStatus e)
            {
                d.IncidentStatuses_Deleting(e);
            }
            private static void __IncidentStatuses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentStatus e)
            {
                d.IncidentStatuses_Deleted(e);
            }
            private static void __IncidentStatuses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentStatus e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.IncidentStatuses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IncidentStatus, bool>> __IncidentStatuses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IncidentStatus, bool>> filter = null;
                d.IncidentStatuses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IncidentWitness>
                __IncidentWitnessesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IncidentWitness>(
                    "IncidentWitnesses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentWitnesses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentWitnesses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentWitnesses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentWitnesses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentWitnesses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentWitnesses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentWitnesses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentWitnesses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentWitnesses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentWitnesses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentWitnesses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentWitnesses_Filter);
            private static bool __IncidentWitnesses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentWitnesses_CanInsert(ref result);
                return result;
            }
            private static bool __IncidentWitnesses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentWitnesses_CanUpdate(ref result);
                return result;
            }
            private static bool __IncidentWitnesses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentWitnesses_CanDelete(ref result);
                return result;
            }
            private static bool __IncidentWitnesses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.IncidentWitnesses_CanRead(ref result);
                return result;
            }
            private static void __IncidentWitnesses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentWitness e)
            {
                d.IncidentWitnesses_Inserting(e);
            }
            private static void __IncidentWitnesses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentWitness e)
            {
                d.IncidentWitnesses_Inserted(e);
            }
            private static void __IncidentWitnesses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentWitness e)
            {
                d.IncidentWitnesses_Updating(e);
            }
            private static void __IncidentWitnesses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentWitness e)
            {
                d.IncidentWitnesses_Updated(e);
            }
            private static void __IncidentWitnesses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentWitness e)
            {
                d.IncidentWitnesses_Deleting(e);
            }
            private static void __IncidentWitnesses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentWitness e)
            {
                d.IncidentWitnesses_Deleted(e);
            }
            private static void __IncidentWitnesses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.IncidentWitness e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.IncidentWitnesses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IncidentWitness, bool>> __IncidentWitnesses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.IncidentWitness, bool>> filter = null;
                d.IncidentWitnesses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.InjuryType>
                __InjuryTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.InjuryType>(
                    "InjuryTypes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InjuryTypes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InjuryTypes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InjuryTypes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InjuryTypes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InjuryTypes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InjuryTypes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InjuryTypes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InjuryTypes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InjuryTypes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InjuryTypes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InjuryTypes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InjuryTypes_Filter);
            private static bool __InjuryTypes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InjuryTypes_CanInsert(ref result);
                return result;
            }
            private static bool __InjuryTypes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InjuryTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __InjuryTypes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InjuryTypes_CanDelete(ref result);
                return result;
            }
            private static bool __InjuryTypes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InjuryTypes_CanRead(ref result);
                return result;
            }
            private static void __InjuryTypes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InjuryType e)
            {
                d.InjuryTypes_Inserting(e);
            }
            private static void __InjuryTypes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InjuryType e)
            {
                d.InjuryTypes_Inserted(e);
            }
            private static void __InjuryTypes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InjuryType e)
            {
                d.InjuryTypes_Updating(e);
            }
            private static void __InjuryTypes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InjuryType e)
            {
                d.InjuryTypes_Updated(e);
            }
            private static void __InjuryTypes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InjuryType e)
            {
                d.InjuryTypes_Deleting(e);
            }
            private static void __InjuryTypes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InjuryType e)
            {
                d.InjuryTypes_Deleted(e);
            }
            private static void __InjuryTypes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InjuryType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.InjuryTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.InjuryType, bool>> __InjuryTypes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.InjuryType, bool>> filter = null;
                d.InjuryTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PersonType>
                __PersonTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PersonType>(
                    "PersonTypes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PersonTypes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PersonTypes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PersonTypes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PersonTypes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PersonTypes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PersonTypes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PersonTypes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PersonTypes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PersonTypes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PersonTypes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PersonTypes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PersonTypes_Filter);
            private static bool __PersonTypes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PersonTypes_CanInsert(ref result);
                return result;
            }
            private static bool __PersonTypes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PersonTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __PersonTypes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PersonTypes_CanDelete(ref result);
                return result;
            }
            private static bool __PersonTypes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PersonTypes_CanRead(ref result);
                return result;
            }
            private static void __PersonTypes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PersonType e)
            {
                d.PersonTypes_Inserting(e);
            }
            private static void __PersonTypes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PersonType e)
            {
                d.PersonTypes_Inserted(e);
            }
            private static void __PersonTypes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PersonType e)
            {
                d.PersonTypes_Updating(e);
            }
            private static void __PersonTypes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PersonType e)
            {
                d.PersonTypes_Updated(e);
            }
            private static void __PersonTypes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PersonType e)
            {
                d.PersonTypes_Deleting(e);
            }
            private static void __PersonTypes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PersonType e)
            {
                d.PersonTypes_Deleted(e);
            }
            private static void __PersonTypes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PersonType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PersonTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PersonType, bool>> __PersonTypes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PersonType, bool>> filter = null;
                d.PersonTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.HealthAndSafetyIncident>
                __IncidentsReportedToMeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.HealthAndSafetyIncident>(
                    "IncidentsReportedToMe",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentsReportedToMe_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentsReportedToMe_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentsReportedToMe_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentsReportedToMe_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentsReportedToMe_PreprocessQuery);
            private static bool __IncidentsReportedToMe_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.IncidentsReportedToMe_CanExecute(ref r);
                return r;
            }
            private static void __IncidentsReportedToMe_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IncidentsReportedToMe_Executing();
            }
            private static void __IncidentsReportedToMe_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IncidentsReportedToMe_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.HealthAndSafetyIncident>)args[0]);
            }
            private static void __IncidentsReportedToMe_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.IncidentsReportedToMe_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __IncidentsReportedToMe_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.HealthAndSafetyIncident> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.HealthAndSafetyIncident>)args[0];
                d.IncidentsReportedToMe_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.HealthAndSafetyIncident>
                __IncidentsThisMonthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.HealthAndSafetyIncident>(
                    "IncidentsThisMonth",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentsThisMonth_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentsThisMonth_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentsThisMonth_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentsThisMonth_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentsThisMonth_PreprocessQuery);
            private static bool __IncidentsThisMonth_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.IncidentsThisMonth_CanExecute(ref r);
                return r;
            }
            private static void __IncidentsThisMonth_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IncidentsThisMonth_Executing();
            }
            private static void __IncidentsThisMonth_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IncidentsThisMonth_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.HealthAndSafetyIncident>)args[0]);
            }
            private static void __IncidentsThisMonth_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.IncidentsThisMonth_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __IncidentsThisMonth_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.HealthAndSafetyIncident> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.HealthAndSafetyIncident>)args[0];
                d.IncidentsThisMonth_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.HealthAndSafetyIncident>
                __OpenIncidentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.HealthAndSafetyIncident>(
                    "OpenIncidents",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OpenIncidents_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OpenIncidents_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OpenIncidents_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OpenIncidents_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OpenIncidents_PreprocessQuery);
            private static bool __OpenIncidents_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.OpenIncidents_CanExecute(ref r);
                return r;
            }
            private static void __OpenIncidents_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.OpenIncidents_Executing();
            }
            private static void __OpenIncidents_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.OpenIncidents_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.HealthAndSafetyIncident>)args[0]);
            }
            private static void __OpenIncidents_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.OpenIncidents_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __OpenIncidents_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.HealthAndSafetyIncident> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.HealthAndSafetyIncident>)args[0];
                d.OpenIncidents_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.HealthAndSafetyIncident>
                __ReverseOrderedIncidentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.HealthAndSafetyIncident>(
                    "ReverseOrderedIncidents",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReverseOrderedIncidents_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReverseOrderedIncidents_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReverseOrderedIncidents_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReverseOrderedIncidents_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReverseOrderedIncidents_PreprocessQuery);
            private static bool __ReverseOrderedIncidents_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ReverseOrderedIncidents_CanExecute(ref r);
                return r;
            }
            private static void __ReverseOrderedIncidents_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ReverseOrderedIncidents_Executing();
            }
            private static void __ReverseOrderedIncidents_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ReverseOrderedIncidents_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.HealthAndSafetyIncident>)args[0]);
            }
            private static void __ReverseOrderedIncidents_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ReverseOrderedIncidents_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ReverseOrderedIncidents_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.HealthAndSafetyIncident> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.HealthAndSafetyIncident>)args[0];
                d.ReverseOrderedIncidents_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IncidentPerson>
                __IncidentPersonsThisMonthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.IncidentPerson>(
                    "IncidentPersonsThisMonth",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersonsThisMonth_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersonsThisMonth_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersonsThisMonth_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersonsThisMonth_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IncidentPersonsThisMonth_PreprocessQuery);
            private static bool __IncidentPersonsThisMonth_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.IncidentPersonsThisMonth_CanExecute(ref r);
                return r;
            }
            private static void __IncidentPersonsThisMonth_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IncidentPersonsThisMonth_Executing();
            }
            private static void __IncidentPersonsThisMonth_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IncidentPersonsThisMonth_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.IncidentPerson>)args[0]);
            }
            private static void __IncidentPersonsThisMonth_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.IncidentPersonsThisMonth_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __IncidentPersonsThisMonth_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.IncidentPerson> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.IncidentPerson>)args[0];
                d.IncidentPersonsThisMonth_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
